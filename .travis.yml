language: node_js

git:
  # Minimize git history, but ensure to not break things:
  # - Merging multiple PR's around same time may introduce a case where it's not
  #   the last merge commit that is to be tested
  depth: 30

cache:
  directories:
    - $HOME/.npm
    - node_modules
    - sdk-js/node_modules

branches:
  only:
    - master # Do not build PR branches
    - /^v\d+\.\d+\.\d+$/ # Ensure to build release tags

env:
  global:
    - FORCE_COLOR=1 # Ensure colored output (color support is not detected in some cases)

# Ensure to install dependencies at their latest versions
install:
  # Note: `npm update` has issues which we need to workaround:
  # - There seems no way to update all project dependency groups in one run
  #   Hence different calls for prod and dev dependencies
  # - We were relying on "--depth 3", but depth setting makes optional dependencies not optional
  #   and adding "--no-optional" proven to not be a reliable workaround (worked just in some cases)
  # - npm documents --dev option for dev dependencies update, but it's only --save-dev that works
  - npm update --no-save
  - npm update --save-dev --no-save
  - cd sdk-js
  - npm install # On publish it's bundled with deps, therefore we rely on `package-lock.json`
  - cd ..

before_script:
  # Fail build right after first script fails. Travis doesn't ensure that: https://github.com/travis-ci/travis-ci/issues/1066
  # More info on below line: https://www.davidpashley.com/articles/writing-robust-shell-scripts/#idm5413512
  - set -e

script:
  - npm test
  - cd sdk-js
  - npm test
  - cd ..

# Ensure to fail build if deploy fails, Travis doesn't ensure that: https://github.com/travis-ci/travis-ci/issues/921
before_deploy:
  - set -e
  - npm run build
  - cd dist
  # Remove eventual old npm logs (needed for deploy status check)
  - rm -rf ~/.npm/_logs
after_deploy:
  - |
    # npm creates log only on failure
    if [ -d ~/.npm/_logs ]; then
      # More debug info
      ls -Rla .
      cat package.json
      # Undocumented way to force Travis build to fail
      travis_terminate 1
    fi

stages:
  - name: Test
  - name: Integration Test
    if: branch = master AND type = push
  - name: Deploy
    if: (branch = master AND type = push) OR tag =~ ^v\d+\.\d+\.\d+$

jobs:
  include:
    # In most cases it's best to configure one job per platform & Node.js version combination
    # (job boot & setup takes ca 1 minute, one task run usually lasts seconds)

    - name: 'Prettier check updated, Lint updated, Unit Tests - Node.js v12'
      if: type = pull_request
      node_js: 12
      script:
        - npm run prettier-check:updated
        - npm run lint:updated
        - cd sdk-js
        - npm run prettier-check:updated
        - npm run lint:updated
        - cd ..
        - npm test
        - cd sdk-js
        - npm test
        - cd ..

    - name: 'Lint, Unit Tests - Node.js v12'
      if: type != pull_request
      node_js: 12
      script:
        - npm run lint
        - cd sdk-js
        - npm run lint
        - cd ..
        - npm test
        - cd sdk-js
        - npm test
        - cd ..

    - name: 'Unit Tests, Coverage - Node.js v13'
      node_js: 13
      before_install:
        - npm install -g npm codecov
      script:
        - npm run cover
        - cd sdk-js
        - npm run cover
        - cd ..
        - codecov
        - codecov -p sdk-js

    - name: 'Isolated Unit Tests - Node.js v10'
      node_js: 10
      script:
        - npm run test-isolated
        - cd sdk-js
        - npm test
        - cd ..

    - name: 'Unit Tests - Node.js v8'
      node_js: 8

    - name: 'Unit Tests - Node.js v6'
      node_js: 6
      before_install:
        # npm@3 doesn't seem handle `--no-optional` option of `npm update` command.
        # Upgrade npm to version which is distributed with Node.js v8
        - npm i -g npm@6.4.1
      script:
        - npm test -- --require "@babel/register"
        - cd sdk-js
        - npm test
        - cd ..

    - stage: Integration Test
      name: 'Integration Tests - Node.js v12'
      node_js: 12
      env:
        - SERVERLESS_PLATFORM_TEST_REGION=us-east-2
        # SERVERLESS_ACCESS_KEY
        - secure: gZPiingsF17q6gKwnQfSJ8/iMssh9/ab9w/a0q16bEDfTXXWq3hfr+pii9kMJdTOT2soU80n8VT7+e9T1o7vKUjzWEyCBXC2WgblxYdc+doNV+REnvqcEFXgupwxmbKFrdJ+VxA6eqdjnwegSfn1qoetH1czl8XMr+JgdXU2+D1OKBR4ATRJDKPZa2KyDxR+UE8T0mhNRgHK6giJ6rGDTEjFl8qOoP0cuAF43KptGxatduvYzGL3dFU4GXdl6J37xnDbBrGIT8USc8GWFQtJeT7JTzBOjHnIvGZGvZ6uVf6WTy1E6h8Yb4929y+zqQihohzOWGDKFBKstmsTYGKJzLxxazhLFakPDWCpxQ0MnRhTWwDKX0LR48i0s4SLWxEr1CkJRbnHcr4ADLWKbFs2ZIw4vrW4hY8AGqRk8stOTdWCYTil+xs/j1VMFho7XzwFTDUprSQMuJevK/IGKFaC2P9LjXtlNWQHTufP8M7puqZYMtkBC8uhzQv3wz1Y+/CB3HcHvlW1E+Rkk9ZJh6mZp+/HnUFApMq23GHIzvQhIq6AhJ7aY5JNih7pR+Waya1gUZt35/LFFpunLIV6CwcdI7j9QtfqC9deE3Xz3UXBLhINd+eJ/6CvhiaTV2CSZMStpBwOxPNwQS/0M4PStcyXTr/ar7kK51csMASPzPQgHcE=
      script:
        - npm run build
        - npm run integration-test

    # Production releases
    - stage: Deploy
      name: Production release
      if: tag =~ ^v\d+\.\d+\.\d+$
      node_js: 12
      script: skip
      deploy:
        edge: true # Workaround Travis regression: https://travis-ci.community/t/missing-api-key-when-deploying-to-github-releases/5761
        provider: npm
        skip_cleanup: true
        email: services@serverless.com
        on:
          tags: true
        api_key:
          secure: Le1nHuG1/67k89s+DNC+laOAZLHLqviDBi9j8hXNH4qIGkEgJw5aXc621q/Vo3eObavEV9P3zV9/b8Fry9WDzXiq046zYhP7IdNkgmQTh/rKyyw6fJNM8Nqp79Hvoe3B/zpHExDlHAT0OoZog0MG57PGQER5v9B/QGwMhjmT5ABLXvukjPS1Huo8YGFZy7hvK70Rfz9EDVRXmolXA8//tmIeqNkfuCLcIbJL0RA7K/kMXeaQ5ppm2JtvyU8z6kvwI1D8S30Wc62iagBIxfqh0hO1Rsf6Q8Lbvd1VXJsGM/96INPCBdcMzrvcyorzDAhcTts3ucXP7OAMlzONultO/6Z71yxvwOPnm33+bUTYvL/l1xBxDIaWsO6S/g27PJfOza66ZYHNV+vDsVANMj8GASQij+kswWuLbHciXVHBaL4i0QGkXSz3lIPUySGc99WUAreZZDk21LYS2jFbpMJDNe+/vLzqfNGcO9hMuq66RHdUlgD3YTFimQIWSYwibWDLelUUsHGe5JOB8zjRPBA9KuWDK8ilBGgzGtcugAlGUuKl1eBs5QQeA8MPtIiTVWAzdID7boCzmLFyTp51layCkICUKH3Zn3zkmhjp3h62lfGuT2tyAfmFUGK+KUMlb4Sw8z93KEG2n+ZFZSpbKgCqMwe3cF3pK/2Yr1csY/GHAgs=

    # Pre-releases
    - stage: Deploy
      name: Pre-release
      if: branch = master
      node_js: 12
      before_install:
        - node ./scripts/updatePreReleaseDependency.js
        - node ./scripts/updatePreReleaseVersion.js
      deploy:
        edge: true # Workaround Travis regression: https://travis-ci.community/t/missing-api-key-when-deploying-to-github-releases/5761
        provider: npm
        tag: next # this is the NPM tag, not git tag.
        skip_cleanup: true
        email: services@serverless.com
        api_key:
          secure: Le1nHuG1/67k89s+DNC+laOAZLHLqviDBi9j8hXNH4qIGkEgJw5aXc621q/Vo3eObavEV9P3zV9/b8Fry9WDzXiq046zYhP7IdNkgmQTh/rKyyw6fJNM8Nqp79Hvoe3B/zpHExDlHAT0OoZog0MG57PGQER5v9B/QGwMhjmT5ABLXvukjPS1Huo8YGFZy7hvK70Rfz9EDVRXmolXA8//tmIeqNkfuCLcIbJL0RA7K/kMXeaQ5ppm2JtvyU8z6kvwI1D8S30Wc62iagBIxfqh0hO1Rsf6Q8Lbvd1VXJsGM/96INPCBdcMzrvcyorzDAhcTts3ucXP7OAMlzONultO/6Z71yxvwOPnm33+bUTYvL/l1xBxDIaWsO6S/g27PJfOza66ZYHNV+vDsVANMj8GASQij+kswWuLbHciXVHBaL4i0QGkXSz3lIPUySGc99WUAreZZDk21LYS2jFbpMJDNe+/vLzqfNGcO9hMuq66RHdUlgD3YTFimQIWSYwibWDLelUUsHGe5JOB8zjRPBA9KuWDK8ilBGgzGtcugAlGUuKl1eBs5QQeA8MPtIiTVWAzdID7boCzmLFyTp51layCkICUKH3Zn3zkmhjp3h62lfGuT2tyAfmFUGK+KUMlb4Sw8z93KEG2n+ZFZSpbKgCqMwe3cF3pK/2Yr1csY/GHAgs=
